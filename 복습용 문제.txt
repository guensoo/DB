1.  사원테이블에서 부서번호가 빠른 순, 부서번호가 같다면 직종이 빠른순, 직종까지 같다면 급여를 많이 받는 순으로
-- 사원의 사번, 이름, 부서번호, 직종, 급여순으로 출력

2. 급여가 15000이상인 사원들의 사번, 이름, 급여, 입사일을
-- 입사일이 빠른 순으로 조회

3. 부서번호가 50번인 사원들의 이름을 출력하되
-- 이름 중 'el'을 모두 '**'로 대체하여 조회하세요

4. 문자열 '   oracle SQL Programming   '에서
-- 양쪽 공백을 제거한 후, 모든 문자를 대문자로 변환하고
-- 최종 문자열의 길이를 반환하시오(dual에다가 하면 됨)

5. ' Hello, Oracle SQL! '문자열에서 양쪽 공백 제거 후
-- 앞의 5글자와 마지막 5글자를 추출하여, 각각 대문자로 변환하고, 두 결과를 콜론(:)으로 연결하여 반환하는 SQL문 작성하기
-- 출력예시(HELLO: SQL!)

6. 'Data' 왼쪽에 '-'문자를 채워 총 10자리 문자열로 만들고
-- 'Base'를 오른쪽에 '*'문자를 채워 총 10자리의 문자열로
-- 만든 후, 이 두 결과를 연결하여 반환하는 sql문 작성하기

7. 이름이 6글자 이상인 사원의 사번과 이름, 급여 조회하기

8. 사원테이블에서 사원번호와 사원번호가 홀수이면 1,
-- 짝수이면 0을 출력하시오.

9. 사원번호가 짝수인 사람들의 사원번호와 이름을 출력하시오.

10. 사원테이블에서 이름, 급여, 급여의 1000당 ■개수로 채워서 조회하기

11. 사원테이블에서 80번 부서에 속하는 사원들의 급여의 평균을 소수점 두자리까지 반올림하여 출력하세요

12. 
12-1. 각 직종별 인원수
12-2. 각 직종별 급여의 합
12-3. 부서별로 가장 높은 급여 조회

13. 각 부서의 급여의 최대값, 최소값, 인원수를 조회하되,
-- 급여의 최대값이 8000이상인 결과만 조회할 것

14. 각 부서별 인원수가 20명 이상인 부서의 정보를
-- 부서번호, 급여의 합, 급여의 평균, 인원수 순으로 출력하되,
-- 급여의 평균은 소수점 둘째자리까지 반올림으로 조회

15.
부서별, 직종별로 그룹화하여 부서번호, 직종, 인원수 순으로 조회하되
-- 직종이 'MAN'으로 끝나는 경우만 조회

16.
각 부서별 평균 급여를 소수점 한자리까지 버리고,
-- 평균 급여가 10000미만인 그룹만 조회해야 하며
-- 부서번호가 50이하인 부서만 조회해주세요






정답 : 
-----------------------------------------------------------------------------
1. 
SELECT EMPLOYEE_ID, FIRST_NAME, DEPARTMENT_ID, JOB_ID, SALARY
FROM EMPLOYEES
ORDER BY DEPARTMENT_ID, JOB_ID, SALARY DESC;
-----------------------------------------------------------------------------
2. 
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, HIRE_DATE
FROM EMPLOYEES
WHERE SALARY >= 15000
ORDER BY HIRE_DATE;
-----------------------------------------------------------------------------
3. 
SELECT REPLACE(FIRST_NAME, 'el', '**') FIRST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50;
-----------------------------------------------------------------------------
4. 
SELECT
TRIM('   oracle SQL Programming   ') CASE1,
upper(TRIM('   oracle SQL Programming   ')) CASE2,
length(upper(TRIM('   oracle SQL Programming   '))) CASE3
FROM dual;
-----------------------------------------------------------------------------
5. 
SELECT CONCAT(
CONCAT(
UPPER(SUBSTR(TRIM(' Hello, Oracle SQL! '), 1, 5)),
':'),
UPPER(SUBSTR(TRIM(' Hello, Oracle SQL! '),14, 5))
)
FROM DUAL;
-----------------------------------------------------------------------------
6. 
SELECT 
CONCAT(
LPAD('Data', 10, '-'),
RPAD('Base', 10, '*'))
FROM DUAL;
-----------------------------------------------------------------------------
7. 
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE LENGTH(FIRST_NAME) >= 6;
-----------------------------------------------------------------------------
8. 
SELECT EMPLOYEE_ID, MOD(EMPLOYEE_ID, 2)
FROM EMPLOYEES;
-----------------------------------------------------------------------------
9. 
SELECT EMPLOYEE_ID, FIRST_NAME
FROM EMPLOYEES 
WHERE MOD(EMPLOYEE_ID, 2) = 0;
-----------------------------------------------------------------------------
10. 
SELECT FIRST_NAME, SALARY, RPAD('■', ROUND(SALARY / 1000), '■')
FROM EMPLOYEES;
-----------------------------------------------------------------------------
11. 8,955.88
SELECT ROUND(AVG(SALARY), 2)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80;
-----------------------------------------------------------------------------
12. 
12-1
SELECT JOB_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY JOB_ID;
-----------------------------------------------------------------------------
12-2
SELECT JOB_ID, SUM(SALARY)
FROM EMPLOYEES
GROUP BY JOB_ID;
-----------------------------------------------------------------------------
12-3
SELECT DEPARTMENT_ID, MAX(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
-----------------------------------------------------------------------------
13.
SELECT DEPARTMENT_ID, MAX(SALARY), MIN(SALARY), COUNT(*)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING MAX(SALARY) >= 8000;
-----------------------------------------------------------------------------
14.
SELECT DEPARTMENT_ID, SUM(SALARY), ROUND(AVG(SALARY),2), COUNT(*)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING COUNT(*) >= 20;
-----------------------------------------------------------------------------
15.
SELECT DEPARTMENT_ID, JOB_ID, COUNT(*)
FROM EMPLOYEES
WHERE JOB_ID LIKE '%MAN'
GROUP BY DEPARTMENT_ID, JOB_ID;
-----------------------------------------------------------------------------
16.
SELECT DEPARTMENT_ID, TRUNC(AVG(SALARY),1)
FROM EMPLOYEES
WHERE DEPARTMENT_ID <= 50
GROUP BY DEPARTMENT_ID
HAVING AVG(SALARY) < 10000;